version: '3.9'
services:
  postgres:
    image: pgvector/pgvector:pg17-trixie
    container_name: vectordb
    restart: always
    environment:
      POSTGRES_DB: chatbot
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    build: ./backend
    container_name: chatbot-backend
    ports:
      - "3001:3001"
    environment:
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=postgres
      - DB_NAME=chatbot
      - DB_PORT=5432
      - OLLAMA_URL=http://host.docker.internal:11434 # ðŸ‘ˆ talk to Ollama on host
    depends_on:
      - postgres

  frontend:
    build: ./frontend
    container_name: chatbot-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:3001
    depends_on:
      - backend
      
  ingest-python:
    build:
      context: ./ingest-python     # ðŸ‘ˆ points to folder containing main.py + Dockerfile
    container_name: ingest-python
    restart: always
    ports:
      - "8000:8000"                # exposes FastAPI endpoint http://localhost:8000
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/chatbot
      - OLLAMA_URL=http://host.docker.internal:11434
    depends_on:
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"  # allows this container to contact Ollama on Windows host
    volumes:
      - ./ingest-python:/app       # optional: liveâ€‘mount your code for development
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    # if your Dockerfile already has CMD set, you can remove this 'command' line

volumes:
  postgres-data: