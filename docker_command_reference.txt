Docker Command reference



-- Build the docker Run at the folder with the Dockerfile
docker build -t my-express-app .

-- Run the docker
docker run -p 3000:3000 my-express-app


-----Create a new docker express app
mkdir my-second-express-app
cd my-second-express-app

npm init -y
npm install express
docker build -t mydocker02_app .
docker run -p 3001:3001 mydocker02_app







-- create a MongoDB 


-- create a yaml file 

version: '3.8'

services:
  mongo:
    image: mongo:5.0  # Use the official MongoDB image
    container_name: mongodb_container  # Optional: Custom name for the container
    ports:
      - "27017:27017"  # Map host port 27017 to container port 27017
    volumes:
      - mongodbdata  # Persist data in a Docker volume
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin  # Set the root username
      MONGO_INITDB_ROOT_PASSWORD: Aa12345678  # Set the root password
      MONGO_INITDB_DATABASE: mydatabase  # Initial database to create

volumes:
  mongodbdata:  # Define a volume to persist database data




-- Start the compose
docker-compose  -f .\docker-compose-mongodb.yaml  up -d


-- Stop the compose 
docker-compose  -f .\docker-compose-mongodb.yaml  down













### MSSQL Database Run
docker run -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=Aa12345678' -e "MSSQL_PID=Developer" -p 1433:1433 -v mssql01_vol01:/var/opt/mssql --name mssql01 -d mcr.microsoft.com/mssql/server:2022-latest 










#### Fast API

## Folder structure 
/app              <<< FastApi Source Code
Dockerfile
requirement.txt

-- Build 
docker build -t fastapi01 .

-- start FastAPI
docker run -d --name fastapi01 -p 8000:80 fastapi01






#### Postgresql 

docker run --name postgresql01 -e POSTGRES_PASSWORD=Aa12345678 -e PGDATA=/var/lib/postgresql/data/pgdata -p 5432:5432 -v postgresql_vol01:/var/lib/postgresql/data -d postgres
