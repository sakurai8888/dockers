
version: '3.8'

services:
  mongo:
    image: mongo:5.0  # Use the official MongoDB image
    container_name: mongodb_container  # Optional: Custom name for the container
    ports:
      - "27018:27017"  # Map host port 27017 to container port 27017
    volumes:
      - mongodbdata01:/data/db  # Persist data in a Docker volume
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin  # Set the root username
      MONGO_INITDB_ROOT_PASSWORD: Aa12345678  # Set the root password
      MONGO_INITDB_DATABASE: mydatabase  # Initial database to create

volumes:
  mongodbdata01:  # Define a volume to persist database data



# how to start 
# docker-compose -f docker_compose_files/mongodb01.yaml up -d
# docker-compose -f docker_compose_files/mongodb01.yaml down
# docker-compose -f docker_compose_files/mongodb01.yaml logs -f
# docker-compose -f docker_compose_files/mongodb01.yaml exec mongo bash
# docker-compose -f docker_compose_files/mongodb01.yaml exec mongo mongo -u admin -p Aa12345678 --authenticationDatabase admin
# docker-compose -f docker_compose_files/mongodb01.yaml exec mongo mongo -u admin -p Aa12345678 --authenticationDatabase mydatabase
# docker-compose -f docker_compose_files/mongodb01.yaml exec mongo mongo -u admin -p Aa12345678 --authenticationDatabase admin --eval "db.admin.find()"
# docker-compose -f docker_compose_files/mongodb01.yaml exec mongo mongo -u admin -p Aa12345678 --authenticationDatabase mydatabase --eval "db.admin.find()"

  